/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyectodamequipo3;

import java.beans.Statement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;

public class Menu extends javax.swing.JFrame {
    protected String creaprofesor;
    protected String creadepartamento;
    protected String creaProfresp;
    protected String creaprofesorPart;
    protected boolean creaActividad;
    protected String creatransporte;
    protected LocalDate creaFini;
    protected LocalDate creaFfin;
    protected boolean creaAloj;
    protected String creaAlojtxt;
    protected String creaadicional;
    
    
    
    public Menu() {
        initComponents();
        cargarProfesores();
        cargarDepartamentos();
        cargarTransportelista();
        cargarProfecombo();
        cargarDepartacombo();
        cargarParticipanteslista();
        cargarRespolista();
        cargargrupos();
        cargarCursos();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        profsol = new javax.swing.JLabel();
        profpar = new javax.swing.JLabel();
        profres = new javax.swing.JLabel();
        aloj = new javax.swing.JLabel();
        ffin = new javax.swing.JLabel();
        fini = new javax.swing.JLabel();
        trans = new javax.swing.JLabel();
        creact = new javax.swing.JLabel();
        dept = new javax.swing.JLabel();
        comen = new javax.swing.JLabel();
        crealoj = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        crecomen = new javax.swing.JTextArea();
        creactpre = new javax.swing.JCheckBox();
        btncrea = new javax.swing.JButton();
        Fechaini = new com.toedter.calendar.JCalendar();
        Fechafin = new com.toedter.calendar.JCalendar();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        horaini = new javax.swing.JTextField();
        horafn = new javax.swing.JTextField();
        solicitante = new javax.swing.JComboBox<>();
        solideparta = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        transporte = new javax.swing.JList<>();
        jScrollPane14 = new javax.swing.JScrollPane();
        listarespo = new javax.swing.JList<>();
        listaparti = new javax.swing.JScrollPane();
        listaparti1 = new javax.swing.JList<>();
        jPanel7 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbestado = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        Profesores = new javax.swing.JTable();
        aplicarprofe = new javax.swing.JButton();
        Borrarprofe = new javax.swing.JButton();
        insertarfilaprofe = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        Grupos = new javax.swing.JTable();
        aplicagrupos = new javax.swing.JButton();
        borrargrupo = new javax.swing.JButton();
        insertagrupo = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        cursos = new javax.swing.JTable();
        aplicacursos = new javax.swing.JButton();
        Borrarcurso = new javax.swing.JButton();
        insertacurso = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        Departamentos = new javax.swing.JTable();
        aplicardepa = new javax.swing.JButton();
        Borrardepa = new javax.swing.JButton();
        insertardepa = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        Apagar = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jScrollPane4.setViewportView(jTree1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1335, 787));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Selecciona un archivo para enviar:");

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(1819, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(447, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Archivos", jPanel1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Modificar", jPanel6);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Consultas", jPanel12);

        profsol.setText("Profesor solicitante :");

        profpar.setText("Profesores participantes :");

        profres.setText("Profesores responsables :");

        aloj.setText("¿Alojamiento?");

        ffin.setText("Fecha fin :");

        fini.setText("Fecha inicio :");

        trans.setText("Medio de transporte :");

        creact.setText("¿Actividad prevista?");

        dept.setText("Departamento :");

        comen.setText("Comentarios adicionales :");

        crealoj.setText("Si");
        crealoj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crealojActionPerformed(evt);
            }
        });

        crecomen.setColumns(20);
        crecomen.setRows(5);
        jScrollPane2.setViewportView(crecomen);

        creactpre.setText("Si");

        btncrea.setText("Enviar");
        btncrea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreaActionPerformed(evt);
            }
        });

        jLabel2.setText("Hora inicio:");

        jLabel3.setText("Hora fin:");

        horaini.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horainiActionPerformed(evt);
            }
        });

        horafn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horafnActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(transporte);

        jScrollPane14.setViewportView(listarespo);

        listaparti.setViewportView(listaparti1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(profsol)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(crealoj)
                                    .addComponent(aloj)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(profres)
                                        .addGap(146, 146, 146)
                                        .addComponent(profpar)
                                        .addGap(141, 141, 141)
                                        .addComponent(comen))))
                            .addComponent(trans)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(solicitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(71, 71, 71))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addGap(11, 11, 11)))
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(61, 61, 61)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dept, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(solideparta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(172, 172, 172)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(creactpre))
                                            .addComponent(creact, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fini)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(Fechaini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(46, 46, 46)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(Fechafin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(ffin))))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(horaini, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))
                                        .addGap(56, 56, 56)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(horafn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(78, 78, 78)
                                .addComponent(listaparti, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(854, 854, 854)
                        .addComponent(btncrea)))
                .addGap(1521, 1521, 1521))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profsol)
                    .addComponent(dept)
                    .addComponent(creact))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creactpre)
                    .addComponent(solicitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(solideparta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(ffin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Fechafin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(trans)
                                            .addComponent(fini))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(horaini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(horafn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(aloj)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(crealoj)))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(profres)
                            .addComponent(profpar)
                            .addComponent(comen)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 25, Short.MAX_VALUE)
                        .addComponent(Fechaini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(btncrea))
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listaparti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(416, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Crear", jPanel5);

        jButton1.setText("Recargar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tbestado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Titulo", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbestado);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(267, 267, 267))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Estado", jPanel7);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        jTabbedPane1.addTab("Solicitudes", jPanel2);

        Profesores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "nombre", "apellidos", "dni", "correo", "departamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(Profesores);

        jScrollPane6.setViewportView(jScrollPane5);

        aplicarprofe.setText("Aplicar");
        aplicarprofe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicarprofeActionPerformed(evt);
            }
        });

        Borrarprofe.setText("Borrar");
        Borrarprofe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarprofeActionPerformed(evt);
            }
        });

        insertarfilaprofe.setText("Insertar");
        insertarfilaprofe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarfilaprofeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(insertarfilaprofe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Borrarprofe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aplicarprofe))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1030, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1356, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aplicarprofe)
                    .addComponent(Borrarprofe)
                    .addComponent(insertarfilaprofe))
                .addContainerGap(319, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Profesores", jPanel8);

        Grupos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "idcurso", "num_alumnos", "activo", "codgrupo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(Grupos);

        aplicagrupos.setText("Aplicar");

        borrargrupo.setText("Borrar");
        borrargrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrargrupoActionPerformed(evt);
            }
        });

        insertagrupo.setText("insertar");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(insertagrupo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(borrargrupo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aplicagrupos))
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 1028, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1359, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aplicagrupos)
                    .addComponent(borrargrupo)
                    .addComponent(insertagrupo))
                .addContainerGap(315, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Grupos", jPanel9);

        cursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "codcurso", "descripcion", "etapa", "activo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane13.setViewportView(cursos);

        aplicacursos.setText("Aplicar");

        Borrarcurso.setText("Borrar");
        Borrarcurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarcursoActionPerformed(evt);
            }
        });

        insertacurso.setText("insertar");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(insertacurso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Borrarcurso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aplicacursos))
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 1028, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1359, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aplicacursos)
                    .addComponent(Borrarcurso)
                    .addComponent(insertacurso))
                .addContainerGap(321, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Cursos", jPanel10);

        Departamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "codigo", "nombre", "IdProfesorJefe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(Departamentos);

        aplicardepa.setText("Aplicar");

        Borrardepa.setText("Borrar");
        Borrardepa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrardepaActionPerformed(evt);
            }
        });

        insertardepa.setText("jButton2");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(insertardepa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Borrardepa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aplicardepa))
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 1018, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1363, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aplicardepa)
                    .addComponent(Borrardepa)
                    .addComponent(insertardepa))
                .addContainerGap(325, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Departamentos", jPanel11);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4)
        );

        jTabbedPane1.addTab("Mantenimiento", jPanel4);

        Apagar.setText("Apagar");
        Apagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(Apagar, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(2232, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(Apagar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(803, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Apagar", jPanel3);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
    private void cargarProfesores(){
        ProfesorDAO p=new ProfesorDAO();
        DefaultTableModel model = (DefaultTableModel) Profesores.getModel();
        List<Profesor> profesores=p.listar();
        for (Profesor profesor : profesores) {
            model.addRow(new Object[]{
                profesor.getId(),
                profesor.getNombre(),
                profesor.getApellidos(),
                profesor.getDni(),
                profesor.getCorreo(),
                profesor.getDepartamento().getId()
            });
        }
    }
        private void cargarDepartamentos(){
        DepartamentoDAO1 d=new DepartamentoDAO1();
        DefaultTableModel model = (DefaultTableModel) Departamentos.getModel();
        List<Departamento> departamentos=d.listar();
        String dato=null;
        for (Departamento departamento : departamentos) {
            if(departamento.getIdjefe()!=null){
                dato=String.valueOf(departamento.getIdjefe().getId());    
            }
            model.addRow(new Object[]{
                departamento.getId(),
                departamento.getCod_departamento(),
                departamento.getNom_departamento(),
                dato
            });
            dato=null;
        }
    }
        private void cargarTransportelista(){
            MedioTransporteDAO m=new MedioTransporteDAO();
            List<MedioTransporte> medios=m.listar();
            DefaultListModel model=new DefaultListModel();
            transporte.setModel(model);
            model.addElement("0.-Sin transporte");
            for (MedioTransporte medio : medios) {
                model.addElement(medio.getId()+".-"+medio.getTipo().name());
            }
            
            
        }
        private void cargarParticipanteslista(){
            ProfesorDAO m=new ProfesorDAO();
            List<Profesor> profesores=m.listar();
            DefaultListModel model=new DefaultListModel();
            listaparti1.setModel(model);
            for (Profesor pro : profesores) {
                model.addElement(pro.getId()+".-"+pro.getNombre()+" "+pro.getApellidos());
            }
            
            
        }
        private void cargarRespolista(){
            ProfesorDAO m=new ProfesorDAO();
            List<Profesor> profesores=m.listar();
            DefaultListModel model=new DefaultListModel();
            listarespo.setModel(model);
            for (Profesor pro : profesores) {
                model.addElement(pro.getId()+".-"+pro.getNombre()+" "+pro.getApellidos());
            }
            
            
        }
        private void cargargrupos(){
        GruposDAO d=new GruposDAO();
        DefaultTableModel model = (DefaultTableModel) Grupos.getModel();
        List<Grupos> grupos=d.listar();
        String activo;
        for (Grupos grupo : grupos) {
            activo="No";
            if(grupo.isActivo()){
                 activo="Si";
            }
            model.addRow(new Object[]{
                grupo.getId(),
                grupo.getCurso().getId(),
                grupo.getNum_alumnos(),
                activo,
                grupo.getCodgrupo()
            });
        }
        }
        private void cargarCursos(){
        CursosDAO d=new CursosDAO();
        DefaultTableModel model = (DefaultTableModel) cursos.getModel();
            System.out.println("a");
        List<Curso> cursos=d.listar();
        String activo;
        for (Curso curso : cursos) {
            activo="No";
            if(curso.isActivo()){
                 activo="Si";
            }
            model.addRow(new Object[]{
                curso.getId(),
                curso.getCodcurso(),
                curso.getDesc_curso(),
                curso.getEtapa(),
                activo
            });
            }
        }
        private void cargarProfecombo(){
            ProfesorDAO m=new ProfesorDAO();
            List<Profesor> profesores=m.listar();
            for (Profesor pro : profesores) {
                solicitante.addItem(String.valueOf(pro.getId())+".-"+pro.getNombre()+" "+pro.getApellidos());
            }
            
            
        }
        private void cargarDepartacombo(){
            DepartamentoDAO1 m=new DepartamentoDAO1();
            List<Departamento> departamentos=m.listar();
            for (Departamento departa : departamentos) {
                solideparta.addItem(String.valueOf(departa.getId())+".-"+departa.getCod_departamento());
            }
            
            
        }
        
    private void ApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApagarActionPerformed
     System.exit(0);
    }//GEN-LAST:event_ApagarActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void crealojActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crealojActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_crealojActionPerformed

    private void btncreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreaActionPerformed
   this.creaActividad=creactpre.isSelected();
   this.creaAloj=crealoj.isSelected();
   
    }//GEN-LAST:event_btncreaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // mostrardatos("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void horainiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horainiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horainiActionPerformed

    private void horafnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horafnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horafnActionPerformed

    private void BorrarprofeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarprofeActionPerformed
        int borrar;
        borrar=Profesores.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) Profesores.getModel();
        int eliminar=(int)model.getValueAt(borrar, 0);
        model.removeRow(borrar);
        ProfesorDAO p=new ProfesorDAO();
        if(borrar>0){
            p.eliminar(eliminar);
        }
        
    }//GEN-LAST:event_BorrarprofeActionPerformed

    private void borrargrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrargrupoActionPerformed
        // TODO add your handling code here:
        int borrar;
        borrar=Grupos.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) Grupos.getModel();
        int eliminar=(int)model.getValueAt(borrar, 0);
        model.removeRow(borrar);
        GruposDAO p=new GruposDAO();
        if(borrar>0){
            p.eliminar(eliminar);
        }
    }//GEN-LAST:event_borrargrupoActionPerformed

    private void BorrarcursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarcursoActionPerformed
        int borrar;
        borrar=cursos.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) cursos.getModel();
        int eliminar=(int)model.getValueAt(borrar, 0);
        model.removeRow(borrar);
        CursosDAO p=new CursosDAO();
        if(borrar>0){
            p.eliminar(eliminar);
        }
    }//GEN-LAST:event_BorrarcursoActionPerformed

    private void BorrardepaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrardepaActionPerformed
        int borrar;
        borrar=Departamentos.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) Departamentos.getModel();
        int eliminar=(int)model.getValueAt(borrar, 0);
        model.removeRow(borrar);
        DepartamentoDAO1 p=new DepartamentoDAO1();
        if(borrar>0){
            p.eliminar(eliminar);
        }
    }//GEN-LAST:event_BorrardepaActionPerformed

    private void aplicarprofeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicarprofeActionPerformed
        int[] borrar=null;
        borrar=Profesores.getSelectedRows();
        DefaultTableModel model = (DefaultTableModel) Profesores.getModel();
        ProfesorDAO p=new ProfesorDAO();
        DepartamentoDAO1 d=new DepartamentoDAO1();
        if(borrar.length>0){
           
            for (int i = 0; i < borrar.length; i++) {
                
                
                int id =(int)model.getValueAt(borrar[i], 0);
                String nombre =(String)model.getValueAt(borrar[i], 1);
                String apellidos =(String)model.getValueAt(borrar[i], 2);
                String dni =(String)model.getValueAt(borrar[i], 3);
                String correo =(String)model.getValueAt(borrar[i], 4);
                
                Departamento departa =d.porId((int)model.getValueAt(borrar[i], 5));  
                Profesor pro=new Profesor(id,nombre,apellidos,dni,correo,departa);
                p.modificar(pro);
                
                
                
                
            }
        }
    }//GEN-LAST:event_aplicarprofeActionPerformed

    private void insertarfilaprofeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarfilaprofeActionPerformed
        DefaultTableModel model = (DefaultTableModel) Profesores.getModel();
        model.addRow(new Object[]{
                0,
                null,
                null,
                null,
                null,
                0
            });
    }//GEN-LAST:event_insertarfilaprofeActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Apagar;
    private javax.swing.JButton Borrarcurso;
    private javax.swing.JButton Borrardepa;
    private javax.swing.JButton Borrarprofe;
    private javax.swing.JTable Departamentos;
    private com.toedter.calendar.JCalendar Fechafin;
    private com.toedter.calendar.JCalendar Fechaini;
    private javax.swing.JTable Grupos;
    private javax.swing.JTable Profesores;
    private javax.swing.JLabel aloj;
    private javax.swing.JButton aplicacursos;
    private javax.swing.JButton aplicagrupos;
    private javax.swing.JButton aplicardepa;
    private javax.swing.JButton aplicarprofe;
    private javax.swing.JButton borrargrupo;
    private javax.swing.JButton btncrea;
    private javax.swing.JLabel comen;
    private javax.swing.JLabel creact;
    private javax.swing.JCheckBox creactpre;
    private javax.swing.JCheckBox crealoj;
    private javax.swing.JTextArea crecomen;
    private javax.swing.JTable cursos;
    private javax.swing.JLabel dept;
    private javax.swing.JLabel ffin;
    private javax.swing.JLabel fini;
    private javax.swing.JTextField horafn;
    private javax.swing.JTextField horaini;
    private javax.swing.JButton insertacurso;
    private javax.swing.JButton insertagrupo;
    private javax.swing.JButton insertardepa;
    private javax.swing.JButton insertarfilaprofe;
    private javax.swing.JButton jButton1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTree jTree1;
    private javax.swing.JScrollPane listaparti;
    private javax.swing.JList<String> listaparti1;
    private javax.swing.JList<String> listarespo;
    private javax.swing.JLabel profpar;
    private javax.swing.JLabel profres;
    private javax.swing.JLabel profsol;
    private javax.swing.JComboBox<String> solicitante;
    private javax.swing.JComboBox<String> solideparta;
    private javax.swing.JTable tbestado;
    private javax.swing.JLabel trans;
    private javax.swing.JList<String> transporte;
    // End of variables declaration//GEN-END:variables

    /*private void mostrardatos(String string) {
        conectar cc=new conectar();
        Connection cn=cc.conexion();
        DefaultTableModel modelo=new DefaultTableModel();
       
        modelo.addColumn("Nombre");
         modelo.addColumn("Estado");
          
        tbestado.setModel(modelo);
        String sql="";
        if (valor.equals(""))
        {
            sql="SELECT titulo_actividad,estado FROM solicitudes";
        }
          
        
        String []datos=new String [2];
        try{
            Statement st=cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
            datos[0]=rs.getString(1);
            datos[1]=rs.getString(2);
            
            modelo.addRow(datos);
            }
            tbestado.setModel(modelo);
        }catch(SQLException ex){
            Logger.getLogger(datos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }*/
}
